import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    PrefUtils().setThemeData(_newTheme);
    Get.forceAppUpdate();
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(12.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.primary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      checkboxTheme: CheckboxThemeData(
        fillColor: MaterialStateColor.resolveWith((states) {
          if (states.contains(MaterialState.selected)) {
            return colorScheme.primary;
          }
          return colorScheme.onSurface;
        }),
        side: BorderSide(
          width: 1,
        ),
        visualDensity: const VisualDensity(
          vertical: -4,
          horizontal: -4,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 47,
        space: 47,
        color: appTheme.blueGray30002,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.blueGray90003,
          fontSize: 16.fSize,
          fontFamily: 'Nunito',
          fontWeight: FontWeight.w300,
        ),
        bodyMedium: TextStyle(
          color: appTheme.blueGray30002,
          fontSize: 14.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray60004,
          fontSize: 12.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 41.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w800,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 36.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w500,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 30.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.blueGray90002,
          fontSize: 24.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w800,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 10.fSize,
          fontFamily: 'Lato',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray90002,
          fontSize: 20.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 14.fSize,
          fontFamily: 'Sen',
          fontWeight: FontWeight.w700,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFFF7621),
    primaryContainer: Color(0XFFC30000),
    secondaryContainer: Color(0X2696969A),

    // Error colors
    errorContainer: Color(0XFF395998),
    onError: Color(0XFF169CE7),

    // On colors(text colors)
    onPrimary: Color(0XFF121223),
    onPrimaryContainer: Color(0XFFE4E6E9),
    onSecondaryContainer: Color(0XFF111A2C),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber200 => Color(0XFFFFD97D);

  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue400 => Color(0XFF369BFF);
  Color get blue700 => Color(0XFF2790C3);
  Color get blue800 => Color(0XFF2566AF);

  // BlueGray
  Color get blueGray100 => Color(0XFFCACCD9);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray200 => Color(0XFFB4B9CA);
  Color get blueGray20001 => Color(0XFFA2ABBF);
  Color get blueGray300 => Color(0XFF8C96AB);
  Color get blueGray30001 => Color(0XFF98A8B8);
  Color get blueGray30002 => Color(0XFFA0A5BA);
  Color get blueGray30003 => Color(0XFFA4A7B8);
  Color get blueGray400 => Color(0XFF7E8A97);
  Color get blueGray50 => Color(0XFFEDF1F5);
  Color get blueGray500 => Color(0XFF6B7897);
  Color get blueGray5001 => Color(0XFFECF0F4);
  Color get blueGray600 => Color(0XFF646982);
  Color get blueGray700 => Color(0XFF464E57);
  Color get blueGray70090 => Color(0X90525C67);
  Color get blueGray800 => Color(0XFF474B51);
  Color get blueGray80001 => Color(0XFF454750);
  Color get blueGray900 => Color(0XFF0E273E);
  Color get blueGray90001 => Color(0XFF32343E);
  Color get blueGray90002 => Color(0XFF31343D);
  Color get blueGray90003 => Color(0XFF3B3333);
  Color get blueGray90004 => Color(0XFF2D2D2D);
  Color get blueGray90005 => Color(0XFF333333);

  // BlueGrayAa
  Color get blueGray800Aa => Color(0XAA263E55);

  // Cyan
  Color get cyan400 => Color(0XFF2AE1E1);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFC6AE);
  Color get deepOrange200 => Color(0XFFF8B48A);
  Color get deepOrange300 => Color(0XFFFD856C);
  Color get deepOrange50 => Color(0XFFFFEBE4);
  Color get deepOrangeA200 => Color(0XFFFB6D3A);
  Color get deepOrangeA20001 => Color(0XFFFB6F3D);
  Color get deepOrangeA20002 => Color(0XFFFC6E2A);

  // Gray
  Color get gray100 => Color(0XFFF6F6F6);
  Color get gray10001 => Color(0XFFF0F5FA);
  Color get gray10002 => Color(0XFFF4F5F7);
  Color get gray10003 => Color(0XFFF6F7F8);
  Color get gray10004 => Color(0XFFF2F2F3);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray20001 => Color(0XFFECECEC);
  Color get gray300 => Color(0XFFD8E3EC);
  Color get gray400 => Color(0XFFAFAFB0);
  Color get gray40001 => Color(0XFFC9C9C9);
  Color get gray40002 => Color(0XFFBFBCBA);
  Color get gray40065 => Color(0X65B6B8BD);
  Color get gray50 => Color(0XFFF6F8FA);
  Color get gray500 => Color(0XFFABABAB);
  Color get gray50001 => Color(0XFF979797);
  Color get gray600 => Color(0XFF737782);
  Color get gray60001 => Color(0XFF747783);
  Color get gray60002 => Color(0XFF7F7F7F);
  Color get gray60003 => Color(0XFF6B6E82);
  Color get gray60004 => Color(0XFF6B6E81);
  Color get gray700 => Color(0XFF676767);
  Color get gray70001 => Color(0XFF5D606E);
  Color get gray80099 => Color(0X993C3C43);
  Color get gray900 => Color(0XFF181C2E);
  Color get gray90001 => Color(0XFF1E1D1D);
  Color get gray90002 => Color(0XFF1C1919);
  Color get gray90003 => Color(0XFF1B1F2F);
  Color get gray90004 => Color(0XFF1E1E2E);

  // Green
  Color get green700 => Color(0XFF219653);
  Color get green900 => Color(0XFF008000);

  // Indigo
  Color get indigo50 => Color(0XFFE3EAF2);
  Color get indigoA700 => Color(0XFF403CFB);

  // Lime
  Color get lime500 => Color(0XFFE0CF3B);

  // Orange
  Color get orange400 => Color(0XFFFFA92A);
  Color get orange50A7 => Color(0XA7FFF1E0);
  Color get orange600 => Color(0XFFFF8400);
  Color get orange800 => Color(0XFFE66E00);

  // Purple
  Color get purple500 => Color(0XFFA03AB1);
  Color get purpleA200 => Color(0XFFB23CFB);

  // Red
  Color get red100 => Color(0XFFFFE0CD);
  Color get red600 => Color(0XFFE04444);
  Color get redA200 => Color(0XFFFB4A59);
  Color get redA700 => Color(0XFFFF0000);

  // Teal
  Color get teal600 => Color(0XFF059C69);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow600 => Color(0XFFFFD234);
  Color get yellow900 => Color(0XFFF58D1D);
  Color get yellow90033 => Color(0X33FF7622);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData(

);
